- hosts: graylog
  become: yes
  become_user: root
  vars_prompt:
    - name: "password"
      prompt: "Enter 'admin' user password"
      private: yes
      default: "graylog"
    - name: "es_memory"
      prompt: "Change memory committed to elasticsearch process (in MBs)"
      private: no
    - name: "public_ip"
      prompt: "What's the public IP of the server"
      private: no
    - name: "private_ip"
      prompt: "What's the local IP of the server"
      private: no
  tasks:
  - name: "Install requirement - apt-transport-https"
    apt:
      name: "apt-transport-https"
      update_cache: true
      state: present

  - name: "Install requirement - openjdk-8-jre-headless"
    apt:
      name: "openjdk-8-jre-headless"
      update_cache: true
      state: present

  - name: "Install requirement - uuid-runtime"
    apt:
      name: "uuid-runtime"
      update_cache: true
      state: present

  - name: "Install requirement - pwgen"
    apt:
      name: "pwgen"
      update_cache: true
      state: present

  - name: "Mongodb - Install package"
    apt:
      name: "mongodb"
      update_cache: true
      state: present

  - name: "Mongodb - Configure mongodb service"
    service:
      name: "mongodb"
      enabled: yes
      state: started

  - name: "Elasticsearch - Add repo key"
    apt_key:
      url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
      state: present

  - name: "Elasticsearch - Add repo"
    apt_repository:
      repo: deb https://artifacts.elastic.co/packages/7.x/apt stable main
      state: present

  - name: "Elasticsearch - Install package"
    apt:
      update_cache: yes

  - name: "Elasticsearch - Install package"
    apt:
      name: "elasticsearch-oss"
      update_cache: true
      state: present

  - name: "Elasticsearch - Configure java path"
    replace:
      path: /etc/default/elasticsearch
      regexp: JAVA_HOME=$
      replace: JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java

  - name: "Elasticsearch - Configure initial heap size "
    when: es_memory is defined
    lineinfile:
      path: /etc/elasticsearch/jvm.options
      regexp: '.*-Xms.*\n'
      line: "-Xms{{ es_memory }}m\n"
      state: present

  - name: "Elasticsearch - Configure maximum heap size "
    when: es_memory is defined
    lineinfile:
      path: /etc/elasticsearch/jvm.options
      regexp: '.*-Xmx.*\n'
      line: "-Xmx{{ es_memory }}m\n"
      state: present

  - name: "Elasticsearch - Configure service"
    service:
      name: "elasticsearch"
      enabled: yes
      state: started

  - name: "Graylog - Get package"
    apt:
      deb: https://packages.graylog2.org/repo/packages/graylog-3.3-repository_latest.deb
      update_cache: true
      state: present

  - name: "Graylog - Install package"
    apt:
      update_cache: true
      name: "graylog-server"
      state: present

  - name: "Graylog - Generate password secret"
    command: pwgen -N 1 -s 96
    register: password_secret

  - name: "Graylog - Configure password secret"
    replace:
      path: /etc/graylog/server/server.conf
      regexp: ^password_secret =$
      replace: "password_secret = {{ password_secret.stdout }}"

  - name: "Graylog - Configure admin password hash"
    replace:
      path: /etc/graylog/server/server.conf
      regexp: ".*root_password_sha2 =.*\n"
      replace: "root_password_sha2 = {{ password | hash('sha256') }} \n"

  - name: "Graylog - Configure rest_listen_uri"
    replace:
      path: /etc/graylog/server/server.conf
      regexp: ".*http_bind_address =.*\n"
      replace: "http_bind_address = {{ private_ip }}:9000 \n"

  - name: "Graylog - Enable cors"
    replace:
      path: /etc/graylog/server/server.conf
      regexp: ".*http_enable_cors =.*\n"
      replace: "http_enable_cors = true \n"

  - name: "Graylog - Configure web_listen_uri"
    replace:
      path: /etc/graylog/server/server.conf
      regexp: ".*http_external_uri =.*\n"
      replace: "http_external_uri = http://{{ public_ip }}:9000/ \n"

  - name: "Graylog - Configure service"
    service:
      name: "graylog-server"
      enabled: yes
      state: started

  - name: "wait for some time(just in case)"
    pause:
      minutes: 2

#makes an POST request for graylog server
  - name: "create input method" 
    uri:
      url: "http://{{ private_ip }}:9000/api/system/inputs"
      method: POST
      url_username: "admin"
      url_password: "{{ password }}"
      return_content: yes
      headers:
        Accept: "application/json"
        X-Requested-By: "Graylog API Browser"
      body_format: "json"
      body: { "title":"TCP monitoring", "type":"org.graylog2.inputs.syslog.tcp.SyslogTCPInput", "global":true, "configuration":{ "recv_buffer_size": 1048576, "tcp_keepalive": false, "use_null_delimiter": false, "number_worker_threads": 2, "tls_client_auth_cert_file": "", "force_rdns": false, "bind_address": "0.0.0.0", "tls_cert_file": "", "store_full_message": false, "expand_structured_data": false, "port": 1514, "tls_key_file": "", "tls_enable": false, "tls_key_password": "", "max_message_size": 2097152, "tls_client_auth": "disabled", "override_source": null, "allow_override_date": true }}
      status_code: 201


